// First, apply the publishing plugin
buildscript {
    repositories {
        mavenLocal()        // for e2e test
        maven { url "https://plugins.gradle.org/m2/" }
    }
    dependencies {
        classpath "com.gradle.publish:plugin-publish-plugin:0.9.6"
        classpath "gradle.plugin.org.shipkit:shipkit:0.8.78"
    }
}

apply plugin: 'maven'
apply plugin: 'idea'
apply plugin: 'groovy'
apply plugin: 'com.gradle.plugin-publish'
apply plugin: 'checkstyle'
apply plugin: 'codenarc'
apply plugin: 'org.shipkit.gradle-plugin-releasing'
apply plugin: 'org.shipkit.release-needed'

apply from: 'gradle/precommit.gradle'

sourceCompatibility = 1.6
targetCompatibility = 1.6

repositories { jcenter() }

group = 'gradle.plugin.org.shipkit'

dependencies {
    compile gradleApi()

    compile "com.github.cliftonlabs:json-simple:2.1.2"
    compile 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.7.3'
    compile 'com.googlecode.java-diff-utils:diffutils:1.3.0'

    testCompile("org.spockframework:spock-core:0.7-groovy-2.0") {
        exclude module: "groovy-all"
    }
    testCompile "cglib:cglib-nodep:2.2.2"
    testCompile "commons-lang:commons-lang:2.4"
    testCompile gradleTestKit()
}

pluginBundle {
    website = 'http://shipkit.org/'
    vcsUrl = 'https://github.com/mockito/mockito-release-tools'
    description = 'Release tools and Gradle plugins that automate Mockito continuous delivery.'
    tags = ['shipkit', 'continuous delivery', 'release']

    plugins {
        //TODO update plugins
        releaseNotesPlugin {
            id = 'org.shipkit.release-notes'
            displayName = 'Shipkit automated release notes generation plugin'
        }

        autoReleaseNotesPlugin {
            id = 'org.shipkit.auto-release-notes'
            displayName = 'Shipkit plugin for automated release notes generation and publishing released changes to VCS'
            tags = ['shipkit', 'continuous delivery', 'release notes', 'changelog']
        }

        autoVersioningPlugin {
            id = 'org.shipkit.auto-versioning'
            displayName = 'Shipkit automated versioning plugin'
            tags = ['shipkit', 'continuous delivery', 'release', 'versioning', 'auto-versioning', 'semantic-versioning']
        }

        gradlePluginReleasingPlugin {
            id = 'org.shipkit.gradle-plugin-releasing'
            displayName = 'Shipkit automated versioning and Travis CI integration'
            tags = ['shipkit', 'continuous delivery', 'release', 'versioning', 'auto-versioning', 'semantic-versioning', 'travis']
        }

        releaseNeededPlugin {
            id = 'org.shipkit.release-needed'
            displayName = 'Shipkit plugin for checking if release is needed'
            tags = ['shipkit', 'continuous delivery', 'release']
        }

        e2eTestPlugin {
            id = 'org.shipkit.e2e-test'
            displayName = 'Shipkit e2e tests plugin'
            tags = ['shipkit', 'continuous delivery', 'release', 'e2e', 'end-to-end', 'end-2-end', 'test']
        }
    }

    mavenCoordinates {
        groupId = 'gradle.plugin.org.shipkit'
        artifactId = 'shipkit'
    }
}

task travisRelease {
    doLast {
        logger.lifecycle("{} - Publishing to Gradle Plugin Portal...", path)
        exec {
            commandLine "./gradlew", "publishPlugins", "performVersionBump",
                    "-Pshipkit.dryRun=false",
                    "-Pgradle.publish.key=${System.getenv('GRADLE_PUBLISH_KEY')}",
                    "-Pgradle.publish.secret=${System.getenv('GRADLE_PUBLISH_SECRET')}"
        }
    }
}

task fastInstall { Task t ->
    description = "Fast installation for quick local testing."
    t.dependsOn install
    gradle.taskGraph.whenReady {
        if (it.hasTask(t)) {
            //we don't need them for local testing so lets disable for faster execution
            tasks.javadoc.enabled = false
            tasks.groovydoc.enabled = false
        }
    }
}