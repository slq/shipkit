apply plugin: 'base'    // for clean task

// It needs to be commented until first version of shipkit with E2E plugin is released.
// If not, Gradle is unable to configure whole project, because E2E plugin isn't published in any version yet.
// TODO uncomment in next PR
// apply plugin: 'org.shipkit.e2e-test'

/*

Before we can push the code, I'd like to clean it up a little bit (TODO)
4. In order for Gradle to neatly paralelize,
let's have the mockito and shipkit-example be separate subprojects,
just like I have set it up in PR #100.
This way, the integration tests will run in parallel (Gradle parallelizes per project)
5. Let's have completely separate task for cloning which will be incremental
    (e.g. does not clone twice when you run build twice).
    The task that performs the test will copy from the files from the clone task into some work dir and execute the test there
6. Let's use relatively shallow clone. We don't need all history.
7. I think we're missing task dependency to root's 'publishToMavenLocal'

Integration testing is a big feature of shipkit!
We will morph it into a plugin that will be part of the release tools plugins.
Take your time engineering it and learn as much Gradle as possible during the process :)

 */